# Generated by Django 5.0.1 on 2024-03-11 05:13

import django.contrib.auth.models
import django.contrib.auth.validators
import django.db.models.deletion
import django.utils.timezone
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('email', models.EmailField(max_length=254, unique=True, verbose_name='почта')),
                ('phone', models.CharField(blank=True, max_length=11, null=True, verbose_name='телефон')),
                ('avatar', models.ImageField(blank=True, null=True, upload_to='users', verbose_name='аватар')),
                ('user_tegram', models.CharField(blank=True, max_length=20, null=True, verbose_name='Телеграм')),
                ('user_whatsup', models.CharField(blank=True, max_length=20, null=True, verbose_name='Ватсап')),
                ('user_vk', models.CharField(blank=True, max_length=20, null=True, verbose_name='ВК')),
                ('user_other', models.CharField(blank=True, max_length=20, null=True, verbose_name='Другие данные')),
                ('user_town', models.CharField(max_length=20, verbose_name='Город')),
                ('user_club', models.CharField(blank=True, max_length=20, null=True, verbose_name='Клуб')),
                ('user_trainer', models.CharField(blank=True, max_length=20, null=True, verbose_name='Тренер')),
                ('user_about', models.TextField(max_length=500, verbose_name='О себе')),
                ('user_hide_info', models.BooleanField(default=False, verbose_name='Скрыть инфо, по умол.открыто')),
                ('check_info', models.BooleanField(default=False, verbose_name='Проверка инфо админом')),
                ('is_active', models.BooleanField(default=False, verbose_name='Пользователь активен')),
                ('email_confirm_key', models.CharField(blank=True, max_length=20, null=True, verbose_name='Ключ верификации')),
                ('org_status', models.BooleanField(default=False, verbose_name='Статус организатора')),
                ('get_check', models.BooleanField(default=False, verbose_name='Запрос на организатора отправлен')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'Юзер',
                'verbose_name_plural': 'Юзеры',
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Dogs',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('id_dog', models.CharField(max_length=7, unique=True, verbose_name='Id собаки')),
                ('dog_name', models.CharField(max_length=20, verbose_name='Кличка по родословной')),
                ('dog_avatar', models.ImageField(blank=True, null=True, upload_to='dogs_photo', verbose_name='Аватар собаки')),
                ('home_name', models.CharField(blank=True, max_length=20, null=True, verbose_name='Домашняя кличка')),
                ('date_borne', models.DateField(blank=True, null=True, verbose_name='Дата рождения')),
                ('breed_dog', models.CharField(max_length=20, verbose_name='Порода собаки')),
                ('pedigree_dog', models.CharField(blank=True, choices=[('RKF', 'РКФ'), ('SKOR', 'СКОР')], max_length=20, null=True, verbose_name='Родословная')),
                ('other_federation', models.CharField(blank=True, max_length=20, null=True, verbose_name='Другая федерация')),
                ('pedigree_file', models.FileField(blank=True, null=True, upload_to='', verbose_name='Родословная - файл')),
                ('number_chip', models.IntegerField(blank=True, null=True, verbose_name='Номер чипа')),
                ('brand_dog', models.CharField(blank=True, max_length=20, null=True, verbose_name='Клеймо')),
                ('owner', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL, verbose_name='Владелец Собаки')),
            ],
            options={
                'verbose_name': 'Собака',
                'verbose_name_plural': 'Собаки',
            },
        ),
    ]
